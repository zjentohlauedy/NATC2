plugins {
	id 'org.springframework.boot' version '2.7.18'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'io.freefair.lombok'  version '5.3.3.3'
	id 'java'
	id 'groovy'
}

group = 'org.natc'
version = '0.0.1-SNAPSHOT'
defaultTasks = ['clean', 'build']

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

sourceSets {
	test {
		java {
			srcDirs = ['src/test/unit/java', 'src/test/integration/java']
		}
		groovy {
			srcDirs = ['src/test/functional/groovy']
		}
		resources {
			srcDirs = ['src/test/resources']
		}
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-quartz'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:+'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'io.zonky.test:embedded-database-spring-test:2.5.1'
	testImplementation platform('org.spockframework:spock-bom:2.3-groovy-3.0')
	testImplementation 'org.codehaus.groovy:groovy-json:3.0.22'
	testImplementation 'org.spockframework:spock-core'
	testImplementation 'org.spockframework:spock-spring'
	testImplementation enforcedPlatform('io.zonky.test.postgres:embedded-postgres-binaries-bom:12.1.0')
}

test {
	useJUnitPlatform()
	afterSuite { desc, result ->
		if (!desc.parent)
			println("${result.resultType} " +
					"(${result.testCount} tests, " +
					"${result.successfulTestCount} successful, " +
					"${result.failedTestCount} failures, " +
					"${result.skippedTestCount} skipped)")
	}
}

wrapper {
	gradleVersion = '7.6.4'
	distributionType = Wrapper.DistributionType.ALL
}
